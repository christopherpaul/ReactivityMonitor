<UserControl x:Class="ReactivityMonitor.Screens.PayloadScreen.PayloadScreenView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ReactivityMonitor.Screens.PayloadScreen"
             xmlns:infra="clr-namespace:ReactivityMonitor.Infrastructure"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <DataTemplate x:Key="InspectValueButtonTemplate">
            <Button Style="{StaticResource IconButton}" Command="{Binding InspectValueCommand}"
                    Visibility="{Binding InspectValueCommand, Converter={StaticResource HiddenWhenNullConverter}}">
                <Image Source="{StaticResource MagnifyIconImage}" Height="16" />
            </Button>
        </DataTemplate>

        <Style x:Key="ReadOnlyTextBox" TargetType="TextBox">
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>

        <DataTemplate x:Key="PropertyValueTemplate">
            <DockPanel>
                <Image DockPanel.Dock="Left" Source="{StaticResource WarningTriangleIconImage}" Height="16" Visibility="{Binding IsExceptionGettingValue, Converter={StaticResource CollapsedWhenFalse}}" />

                <TextBox Text="{Binding ValueString, Mode=OneWay}" ToolTip="{Binding ValueString}">
                    <TextBox.Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource ReadOnlyTextBox}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsExceptionGettingValue}" Value="True">
                                    <Setter Property="FontStyle" Value="Italic" />
                                    <Setter Property="Foreground" Value="Gray" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </DockPanel>
        </DataTemplate>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <TextBox Text="{Binding Event.Payload.ValueString, Mode=OneWay}" ToolTip="{Binding Event.Payload.ValueString}" 
                 Style="{StaticResource ReadOnlyTextBox}"
                 FontWeight="Bold" Margin="2,4,2,4" />
        <TextBox Grid.Row="1" Text="{Binding Event.Payload.TypeName, Mode=OneWay}" ToolTip="{Binding Event.Payload.TypeName}"
                 Style="{StaticResource ReadOnlyTextBox}"
                 Margin="2,2,2,2" />

        <DataGrid Grid.Row="2" IsReadOnly="True" AutoGenerateColumns="False" ItemsSource="{Binding Event.Payload.Properties}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Property" Width="*" Binding="{Binding Name}" />
                <DataGridTemplateColumn Header="Value" Width="*" CellTemplate="{StaticResource PropertyValueTemplate}" />
                <DataGridTemplateColumn Width="Auto" CellTemplate="{StaticResource InspectValueButtonTemplate}">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <Button Style="{StaticResource IconButton}" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PayloadScreenView}}, Path=DataContext.Event.GoToParentObjectCommand}">
                                <Image Source="{StaticResource UpArrowIconImage}" />
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>        
    </Grid>
</UserControl>
